# -*- coding: utf-8 -*-
"""webcam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cm16i1XKM3X8wuYDqKis39cX3RA_EGFd
"""

import cv2
import numpy as np

# 임계값 및 최대 차이 설정
thresh = 25
max_diff = 5

a, b, c = None, None, None
cap = cv2.VideoCapture(0)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 720)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 600)

# 웹캠이 제대로 열렸는지 확인
if not cap.isOpened():
    print("오류: 웹캠을 열 수 없습니다.")
    exit()

print("웹캠 열기 성공")

# 초기 프레임 읽기
ret, a = cap.read()
ret, b = cap.read()

print("초기 프레임 읽기 성공")

while ret:
    ret, c = cap.read()
    if not ret:
        print("오류: 웹캠에서 프레임을 읽을 수 없습니다.")
        break

    # 프레임 복사
    draw = c.copy()

    # 프레임을 그레이스케일로 변환
    a_gray = cv2.cvtColor(a, cv2.COLOR_BGR2GRAY)
    b_gray = cv2.cvtColor(b, cv2.COLOR_BGR2GRAY)
    c_gray = cv2.cvtColor(c, cv2.COLOR_BGR2GRAY)

    # 프레임 간 차이 계산
    diff1 = cv2.absdiff(a_gray, b_gray)
    diff2 = cv2.absdiff(b_gray, c_gray)

    # 임계값 적용
    ret, diff1_t = cv2.threshold(diff1, thresh, 255, cv2.THRESH_BINARY)
    ret, diff2_t = cv2.threshold(diff2, thresh, 255, cv2.THRESH_BINARY)

    # 차이 AND 연산
    diff = cv2.bitwise_and(diff1_t, diff2_t)

    # 모폴로지 연산 적용
    k = cv2.getStructuringElement(cv2.MORPH_CROSS, (3, 3))
    diff = cv2.morphologyEx(diff, cv2.MORPH_OPEN, k)

    # 변화가 있는 픽셀 수 계산
    diff_cnt = cv2.countNonZero(diff)
    if diff_cnt > max_diff:
        nzero = np.nonzero(diff)
        cv2.rectangle(draw, (min(nzero[1]), min(nzero[0])), (max(nzero[1]), max(nzero[0])), (0, 255, 0), 2)
        cv2.putText(draw, '움직임 감지됨', (10, 30), cv2.FONT_HERSHEY_DUPLEX, 0.5, (0, 0, 255))

    # 결과를 가로로 스택하여 표시
    stacked = np.hstack((draw, cv2.cvtColor(diff, cv2.COLOR_GRAY2BGR)))
    cv2.imshow('motion_sensor', stacked)

    # 프레임 업데이트
    a = b
    b = c

    # 'w' 키를 누르면 루프 종료
    if cv2.waitKey(1) == ord("w"):
        break

    print("프레임 처리 중...")

# 웹캠 및 창 닫기
cap.release()
cv2.destroyAllWindows()
print("웹캠 및 창 닫기 완료")
